{"version":3,"sources":["components/Navbar.tsx","api.ts","store/PeopleContext.tsx","App.tsx","pages/HomePage.tsx","utils/searchHelper.ts","components/SearchLink.tsx","utils/constants.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PersonPage.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","utils/preparedPeople.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","Navbar","className","role","to","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","then","fetch","response","json","PeopleContext","React","createContext","getPreparedPeople","people","map","person","mother","find","name","motherName","father","fatherName","PeopleProvider","children","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","peopleFromServer","Provider","value","App","HomePage","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","delete","Array","isArray","part","append","set","SearchLink","params","props","useSearchParams","searchParams","search","CENTURIES","PeopleFilters","setSearchParams","query","get","trim","centuries","getAll","sex","type","placeholder","onChange","event","target","century","newCenturies","includes","filter","epoch","length","Loader","PersonLink","pathname","slug","PersonPage","selectedPerson","born","died","SortType","PeopleTable","useParams","personId","sort","order","handleSortClick","sortType","sortedPeople","isReversed","filteredPeople","person1","person2","Alphabet","localeCompare","Sex","Born","Died","reverse","getSortPeople","PeoplePage","useContext","visiblePeople","lowerQuery","toLowerCase","Math","ceil","preparedPeople","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ce103ecd.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => cn(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={getLinkClass}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={getLinkClass}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\ntype PeopleContextValues = {\n  people: Person[];\n  setPeople: React.Dispatch<React.SetStateAction<Person[]>>;\n  isLoading: boolean;\n  isError: boolean;\n};\n\nexport const PeopleContext = React.createContext({} as PeopleContextValues);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst getPreparedPeople = (people: Person[]): Person[] => {\n  return people.map(person => {\n    return {\n      ...person,\n      mother: people.find(({ name }) => name === person.motherName),\n      father: people.find(({ name }) => name === person.fatherName),\n    };\n  });\n};\n\nexport const PeopleProvider: React.FC<Props> = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = () => {\n      setTimeout(async () => {\n        try {\n          const peopleFromServer = await getPeople();\n\n          setPeople(getPreparedPeople(peopleFromServer));\n        } catch (error) {\n          setIsError(true);\n        } finally {\n          setIsLoading(false);\n        }\n      }, 1000);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <PeopleContext.Provider value={{\n      people,\n      setPeople,\n      isLoading,\n      isError,\n    }}\n    >\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n\nexport function usePeople() {\n  const people = useContext(PeopleContext);\n\n  return people;\n}\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { PeopleProvider } from './store/PeopleContext';\n\nexport const App = () => (\n  <PeopleProvider>\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  </PeopleProvider>\n);\n","export const HomePage = () => (\n  <>\n    <h1 className=\"title\">Home Page</h1>\n  </>\n);\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams;\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","export const CENTURIES = ['16', '17', '18', '19', '20'];\nexport const SEX_FEMALE = 'f';\nexport const SEX_MALE = 'm';\nexport const EMPTY_STRING = '';\nexport const NOT_SET_VALUE = '-';\nexport const ONE_HUNDRED = 100;\n","import cn from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\nimport {\n  CENTURIES,\n  EMPTY_STRING,\n  SEX_FEMALE,\n  SEX_MALE,\n} from '../utils/constants';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query')?.trim() || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  function handleQueryChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setSearchParams(getSearchWith(searchParams, {\n      query: event.target.value || null,\n    }));\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={cn({\n            'is-active': searchParams.get('sex') === EMPTY_STRING,\n          })}\n          params={{ sex: EMPTY_STRING }}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          className={cn({\n            'is-active': searchParams.get('sex') === SEX_MALE,\n          })}\n          params={{ sex: SEX_MALE }}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          className={cn({\n            'is-active': searchParams.get('sex') === SEX_FEMALE,\n          })}\n          params={{ sex: SEX_FEMALE }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {CENTURIES.map((century) => {\n              const newCenturies = centuries.includes(century)\n                ? centuries.filter(epoch => epoch !== century)\n                : [...centuries, century];\n\n              return (\n                <SearchLink\n                  key={century}\n                  data-cy=\"century\"\n                  className={cn('button', 'mr-1', {\n                    'is-info': centuries.includes(century),\n                  })}\n                  params={{ centuries: newCenturies }}\n                >\n                  {century}\n                </SearchLink>\n              );\n            })}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={cn(\n                'button',\n                'is-success',\n                { 'is-outlined': centuries.length },\n              )}\n              params={{ centuries: [] }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{ sex: null, centuries: [], query: null }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { SEX_FEMALE, SEX_MALE } from '../utils/constants';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        pathname: `${person.slug}`,\n        search: searchParams.toString(),\n      }}\n      className={cn({\n        'has-text-danger': person.sex === SEX_FEMALE,\n        'has-text-link': person.sex === SEX_MALE,\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { NOT_SET_VALUE } from '../utils/constants';\n\ntype Props = {\n  person: Person;\n  selectedPerson: string;\n};\n\nexport const PersonPage: React.FC<Props> = ({ person, selectedPerson }) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    mother,\n    motherName,\n    father,\n    fatherName,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={\n        cn({\n          'has-background-warning': selectedPerson === slug,\n        })\n      }\n    >\n      <td>\n        <PersonLink\n          person={person}\n        />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (\n            <PersonLink person={mother} />\n          ) : (\n            motherName || NOT_SET_VALUE\n          )}\n      </td>\n      <td>\n        {father\n          ? (\n            <PersonLink person={father} />\n          ) : (\n            fatherName || NOT_SET_VALUE\n          )}\n      </td>\n    </tr>\n  );\n};\n","import cn from 'classnames';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonPage } from './PersonPage';\nimport { SearchLink } from './SearchLink';\n\nenum SortType {\n  Alphabet = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n\ninterface FilterSort {\n  sortType: SortType | string | null;\n  isReversed: string | null;\n}\n\nfunction getSortPeople(\n  people: Person[],\n  {\n    sortType,\n    isReversed,\n  }: FilterSort,\n) {\n  const filteredPeople = [...people];\n\n  if (sortType) {\n    filteredPeople.sort((person1, person2) => {\n      switch (sortType) {\n        case SortType.Alphabet:\n          return person1.name.localeCompare(person2.name);\n        case SortType.Sex:\n\n          return person1.sex.localeCompare(person2.sex);\n        case SortType.Born:\n\n          return person1.born - person2.born;\n        case SortType.Died:\n\n          return person1.died - person2.died;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return isReversed ? filteredPeople.reverse() : filteredPeople;\n}\n\nexport const PeopleTable = ({ people }: { people: Person[] }) => {\n  const { personId = '' } = useParams();\n\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  function handleSortClick(sortType: SortType) {\n    if (sort !== sortType) {\n      return { sort: sortType, order: null };\n    }\n\n    if (!order) {\n      return { sort: sortType, order: 'desk' };\n    }\n\n    return {\n      sort: null,\n      order: null,\n    };\n  }\n\n  const sortedPeople = getSortPeople(people, {\n    sortType: sort, isReversed: order,\n  });\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <SearchLink\n                params={handleSortClick(SortType.Alphabet)}\n\n              >\n                <span className=\"icon\">\n                  <i className={cn('fas fa-sort', {\n                    'fa-sort-up': sort === SortType.Alphabet && !order,\n                    'fa-sort-down': sort === SortType.Alphabet && order,\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <SearchLink\n                params={handleSortClick(SortType.Sex)}\n\n              >\n                <span className=\"icon\">\n                  <i className={cn('fas fa-sort', {\n                    'fa-sort-up': sort === SortType.Sex && !order,\n                    'fa-sort-down': sort === SortType.Sex && order,\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <SearchLink\n                params={handleSortClick(SortType.Born)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('fas fa-sort', {\n                    'fa-sort-up': sort === SortType.Born && !order,\n                    'fa-sort-down': sort === SortType.Born && order,\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <SearchLink\n                params={handleSortClick(SortType.Died)}\n\n              >\n                <span className=\"icon\">\n                  <i className={cn('fas fa-sort', {\n                    'fa-sort-up': sort === SortType.Died && !order,\n                    'fa-sort-down': sort === SortType.Died && order,\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {sortedPeople.map((person) => (\n          <PersonPage\n            person={person}\n            key={person.slug}\n            selectedPerson={personId}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\n\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\n\nimport { usePeople } from '../store/PeopleContext';\nimport { preparedPeople } from '../utils/preparedPeople';\n\nexport const PeoplePage = () => {\n  const { people, isLoading, isError } = usePeople();\n  const [searchParams] = useSearchParams();\n\n  const visiblePeople = preparedPeople(searchParams, people);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isError && !isLoading && (\n              <PeopleFilters />\n            )}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {isError && !isLoading && (\n                <p\n                  data-cy=\"peopleLoadingError\"\n                  className=\"has-text-danger\"\n                >\n                  Something went wrong\n                </p>\n              )}\n\n              {!visiblePeople?.length && !isLoading && !isError && (\n                <p\n                  data-cy=\"noPeopleMessage\"\n                >\n                  There are no people on the server\n                </p>\n              )}\n\n              {!!visiblePeople?.length && !isError && (\n                <PeopleTable people={visiblePeople} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\nimport { ONE_HUNDRED } from './constants';\n\nexport const preparedPeople = (\n  searchParams: URLSearchParams,\n  people: Person[],\n) => {\n  const query = searchParams.get('query') || null;\n  const centuries = searchParams.getAll('centuries') || null;\n  const sex = searchParams.get('sex') || null;\n\n  const lowerQuery = query?.toLowerCase();\n\n  let filteredPeople = people;\n\n  if (lowerQuery) {\n    filteredPeople = filteredPeople.filter(person => {\n      return person.name.toLowerCase()\n        .includes(lowerQuery)\n        || person.motherName?.toLowerCase()\n          .includes(lowerQuery)\n        || person.fatherName?.toLowerCase()\n          .includes(lowerQuery);\n    });\n  }\n\n  if (centuries.length) {\n    filteredPeople = filteredPeople.filter(person => {\n      return centuries\n        .includes(Math.ceil(person.born / ONE_HUNDRED).toString());\n    });\n  }\n\n  if (sex) {\n    filteredPeople = filteredPeople.filter(person => {\n      return person.sex === sex;\n    });\n  }\n\n  return filteredPeople;\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport { App } from './App';\n\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":personId?\" />\n        </Route>\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}